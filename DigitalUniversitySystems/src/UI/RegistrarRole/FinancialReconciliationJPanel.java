/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.RegistrarRole;

import Model.Student;
import Model.FinancialRecord;
import Model.Department; 
import Model.Person;
import Model.FinancialService; 
import Model.User.UserAccount;
import Model.accesscontrol.ConfigureJTable; 
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.util.Map;
import java.util.ArrayList;
import java.util.HashMap;

/**
 *
 * @author jayan
 */
public class FinancialReconciliationJPanel extends javax.swing.JPanel {

    private final FinancialService financialService;
    
    public FinancialReconciliationJPanel() {
        initComponents();
        this.financialService = new FinancialService();
        initializeFilters();
        resetSummaryFields();
    }
    
    private void initializeFilters() {
        // Populate Semester Dropdown
        jComboBoxSemester.removeAllItems();
        jComboBoxSemester.addItem("Fall 2025");
        jComboBoxSemester.addItem("Spring 2026");
        
        // Populate Department Dropdown using the Enum
        jComboBoxDepartment.removeAllItems();
        jComboBoxDepartment.addItem("All Departments");
        for (Department dept : Department.values()) {
            jComboBoxDepartment.addItem(dept.toString());
        }
    }
    
    private void resetSummaryFields() {
        fieldTotalTutionCollected.setText("N/A");
        fieldTotalUnpaidTution.setText("N/A");
        fieldDeptRevenue.setText("N/A");
        
        DefaultTableModel model = (DefaultTableModel) tblFinancialRecon.getModel();
        model.setRowCount(0);
    }
    
    private void populateStatusTable(String semester) {
        DefaultTableModel model = (DefaultTableModel) tblFinancialRecon.getModel();
        model.setRowCount(0); 

        // Use the centralized list of financial records
        List<FinancialRecord> records = financialService.getRecordsBySemester(semester);
        
        // Map to aggregate [Billed, Paid] amounts by Student UNID
        Map<Integer, Double[]> studentNetData = new HashMap<>(); 
        
        for (FinancialRecord record : records) {
            int unid = record.getStudent().getPerson().getUNID();
            
            // Get or initialize [Billed, Paid] array
            Double[] net = studentNetData.getOrDefault(unid, new Double[]{0.0, 0.0}); 
            
            if (record.getType().equalsIgnoreCase("BILLED")) {
                net[0] += record.getAmount();
            } else if (record.getType().equalsIgnoreCase("PAID")) {
                net[1] += record.getAmount();
            }
            studentNetData.put(unid, net);
        }

        // Populate the table using the aggregated data
        for (Map.Entry<Integer, Double[]> entry : studentNetData.entrySet()) {
            
            // --- FIX: Safely retrieve and cast the Student object ---
            // 1. Find the UserAccount using the UNID (key is Integer, needs to be String for findUserAccount)
            UserAccount ua = ConfigureJTable.directory.findUserAccount(String.valueOf(entry.getKey()));
            
            if (ua == null || !(ua.getProfile() instanceof Student)) {
                continue; 
            }
            // 2. Cast the Profile to a Student object
            Student student = (Student) ua.getProfile(); 
            // --- END FIX ---
            
            double billed = entry.getValue()[0];
            double paid = entry.getValue()[1];
            double balance = billed - paid;
            
            String status = balance > 0 ? "UNPAID" : (balance == 0 ? "PAID OFF" : "OVERPAID");

            model.addRow(new Object[]{
                entry.getKey(), // Student ID (UNID)
                student.getPerson().getName(), // Access Name correctly
                String.format("$%,.2f", billed),
                String.format("$%,.2f", paid),
                status
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSemester = new javax.swing.JLabel();
        jComboBoxSemester = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFinancialRecon = new javax.swing.JTable();
        btnGenerateReport = new javax.swing.JButton();
        lblTotalTutionCollected = new javax.swing.JLabel();
        lblTotalUnpaidTution = new javax.swing.JLabel();
        fieldTotalTutionCollected = new javax.swing.JLabel();
        fieldTotalUnpaidTution = new javax.swing.JLabel();
        lblDepartmentFilter = new javax.swing.JLabel();
        jComboBoxDepartment = new javax.swing.JComboBox<>();
        lblRevenueBreakdown = new javax.swing.JLabel();
        fieldDeptRevenue = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 204));
        setMaximumSize(new java.awt.Dimension(600, 465));
        setMinimumSize(new java.awt.Dimension(600, 465));
        setPreferredSize(new java.awt.Dimension(600, 465));

        lblSemester.setText("Semester");

        jComboBoxSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tblFinancialRecon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Student Name", "Billed Amount", "Paid Amount", "Payment Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFinancialRecon);

        btnGenerateReport.setBackground(new java.awt.Color(255, 204, 204));
        btnGenerateReport.setText("Generate Financial Report Summary");
        btnGenerateReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateReportActionPerformed(evt);
            }
        });

        lblTotalTutionCollected.setText("Total Tution Collected:");

        lblTotalUnpaidTution.setText("Total Unpaid Tuition:");

        fieldTotalTutionCollected.setText("//AmountCollected");

        fieldTotalUnpaidTution.setText("//AmountYetUnpaid");

        lblDepartmentFilter.setText("Department");

        jComboBoxDepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblRevenueBreakdown.setText("Per-Department Revenue (Selected Dept):");

        fieldDeptRevenue.setText("//RevenueBreakdown");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lblSemester)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(lblDepartmentFilter)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(186, 186, 186)
                                .addComponent(btnGenerateReport))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblTotalTutionCollected)
                                    .addComponent(lblTotalUnpaidTution)
                                    .addComponent(lblRevenueBreakdown))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fieldTotalTutionCollected)
                                    .addComponent(fieldTotalUnpaidTution)
                                    .addComponent(fieldDeptRevenue))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSemester)
                    .addComponent(jComboBoxSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDepartmentFilter)
                    .addComponent(jComboBoxDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGenerateReport)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalTutionCollected)
                    .addComponent(fieldTotalTutionCollected))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalUnpaidTution)
                    .addComponent(fieldTotalUnpaidTution))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRevenueBreakdown)
                    .addComponent(fieldDeptRevenue))
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerateReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateReportActionPerformed
        // TODO add your handling code here:
        String semester = (String) jComboBoxSemester.getSelectedItem();
        String departmentFilter = (String) jComboBoxDepartment.getSelectedItem();
        
        if (semester == null) {
             JOptionPane.showMessageDialog(this, "Please select a semester.", "Warning", JOptionPane.WARNING_MESSAGE);
             return;
        }

        // 1. Monitor tuition payment status for all enrolled students.
        populateStatusTable(semester);
        
        // 2. Calculate Total Revenue Summary (already calculated collected/unpaid totals)
        Map<String, Double> totalSummary = financialService.calculateTotalRevenue(semester);
        double collected = totalSummary.getOrDefault("COLLECTED", 0.0);
        double unpaid = totalSummary.getOrDefault("UNPAID", 0.0);

    // 3. Calculate Department Breakdown using the updated service logic
        Map<String, Double> deptRevenueMap = financialService.calculateDepartmentRevenue(semester);
        double specificDeptRevenue = 0.0;

        if (departmentFilter.equals("All Departments")) {
        // If "All Departments" is selected, the revenue is the total collected.
            specificDeptRevenue = collected;
        } else {
        // If a specific department (e.g., "CS") is selected, pull the value from the map.
            specificDeptRevenue = deptRevenueMap.getOrDefault(departmentFilter, 0.0);
        }
    
    // Update Summary Fields
        fieldTotalTutionCollected.setText(String.format("$%,.2f", collected));
        fieldTotalUnpaidTution.setText(String.format("$%,.2f", unpaid));
    
    // Display the per-department breakdown
        fieldDeptRevenue.setText(String.format("$%,.2f", specificDeptRevenue));

        JOptionPane.showMessageDialog(this, "Financial reports generated successfully for " + semester, "Success", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnGenerateReportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerateReport;
    private javax.swing.JLabel fieldDeptRevenue;
    private javax.swing.JLabel fieldTotalTutionCollected;
    private javax.swing.JLabel fieldTotalUnpaidTution;
    private javax.swing.JComboBox<String> jComboBoxDepartment;
    private javax.swing.JComboBox<String> jComboBoxSemester;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDepartmentFilter;
    private javax.swing.JLabel lblRevenueBreakdown;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JLabel lblTotalTutionCollected;
    private javax.swing.JLabel lblTotalUnpaidTution;
    private javax.swing.JTable tblFinancialRecon;
    // End of variables declaration//GEN-END:variables
}
