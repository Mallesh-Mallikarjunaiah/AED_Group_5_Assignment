/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.AdminRole;

import Model.Department;
import Model.ProfileEnum;
import Model.User.UserAccountDirectory;
import javax.swing.JOptionPane;

/**
 *
 * @author gagan
 */
public class PersonRegistrationJPanel extends javax.swing.JPanel {
    
    private UserAccountDirectory accountDirectory;

    /**
     * Creates new form PersonRegistrationJPanel
     */
    public PersonRegistrationJPanel(UserAccountDirectory accountDirectory) {
        initComponents();
        this.accountDirectory = accountDirectory;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        lblDepartment = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblContactNumber = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtContactNumber = new javax.swing.JTextField();
        comboxRole = new javax.swing.JComboBox<>();
        lblUserName = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        deptComboBox = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(204, 255, 204));
        setMaximumSize(new java.awt.Dimension(600, 465));
        setMinimumSize(new java.awt.Dimension(600, 465));

        lblName.setText("Name");

        lblRole.setText("Role");

        lblDepartment.setText("Department");

        lblEmail.setText("E-mail");

        lblContactNumber.setText("Contact Number");

        btnRegister.setText("Register New Person");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        comboxRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Faculty", "Student", "Registrar" }));
        comboxRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboxRoleActionPerformed(evt);
            }
        });

        lblUserName.setText("User Name");

        lblPassword.setText("Password");

        txtUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameActionPerformed(evt);
            }
        });

        deptComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CS", "IS", "AI", "DS" }));
        deptComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(btnRegister))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblRole, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblDepartment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblContactNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))
                            .addComponent(lblUserName)
                            .addComponent(lblPassword))
                        .addGap(121, 121, 121)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtName)
                            .addComponent(txtEmail)
                            .addComponent(txtContactNumber)
                            .addComponent(comboxRole, 0, 180, Short.MAX_VALUE)
                            .addComponent(txtUserName)
                            .addComponent(txtPassword)
                            .addComponent(deptComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRole)
                    .addComponent(comboxRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDepartment)
                    .addComponent(deptComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContactNumber)
                    .addComponent(txtContactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUserName)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(btnRegister)
                .addContainerGap(92, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameActionPerformed

    private void deptComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deptComboBoxActionPerformed

    private void comboxRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboxRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboxRoleActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        String name = this.txtName.getText().trim();
        String contactNum = this.txtContactNumber.getText().trim();
        String email = this.txtEmail.getText().trim();
        String un = this.txtUserName.getText().trim();
        String pw = this.txtPassword.getText();

        // Basic required-field validation
        if (name.isEmpty() || un.isEmpty() || pw.isEmpty() || email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in Name, Username, Password and Email fields.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Check for duplicate username or email
        for (Model.User.UserAccount ua : this.accountDirectory.getUserAccountList()) {
            if (ua.getUsername() != null && ua.getUsername().equalsIgnoreCase(un)) {
                JOptionPane.showMessageDialog(this, "Username already exists. Please choose another username.", "Duplicate Username", JOptionPane.ERROR_MESSAGE);
                return;
            }
            String existingEmail = ua.getProfile().getPerson().getEmail();
            if (existingEmail != null && existingEmail.equalsIgnoreCase(email)) {
                JOptionPane.showMessageDialog(this, "E-mail already registered. Please use a different e-mail.", "Duplicate E-mail", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        // Determine profile and department safely
        Object roleSelection = this.comboxRole.getSelectedItem();
        if (roleSelection == null) {
            JOptionPane.showMessageDialog(this, "Please select a role.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ProfileEnum profile = ProfileEnum.fromProfile(roleSelection.toString());
        if (profile == null) {
            JOptionPane.showMessageDialog(this, "Invalid role selected.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Object deptSelection = this.deptComboBox.getSelectedItem();
        if (deptSelection == null) {
            JOptionPane.showMessageDialog(this, "Please select a department.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Department dept = null;
        try {
            dept = Department.valueOf(deptSelection.toString());
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(this, "Invalid department selected.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        this.accountDirectory.newUserAccount(name, contactNum, un, pw, profile, dept, email);
        
        JOptionPane.showMessageDialog(this, "Account Created Successfully");

        // Reset all input fields
        txtName.setText("");
        txtContactNumber.setText("");
        txtEmail.setText("");
        txtUserName.setText("");
        txtPassword.setText("");
        comboxRole.setSelectedIndex(0);
        deptComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_btnRegisterActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegister;
    private javax.swing.JComboBox<String> comboxRole;
    private javax.swing.JComboBox<String> deptComboBox;
    private javax.swing.JLabel lblContactNumber;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTextField txtContactNumber;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
