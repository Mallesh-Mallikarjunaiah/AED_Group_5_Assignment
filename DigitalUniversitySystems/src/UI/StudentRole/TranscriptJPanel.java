/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.StudentRole;
import Model.Enrollment;
import Model.CourseOffering;
import Model.Student;
import Model.User.UserAccount;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author MALLESH
 */
public class TranscriptJPanel extends javax.swing.JPanel {
    private UserAccount userAccount;
    private Student student;
    private ArrayList<Enrollment> allEnrollments;


    /**
     * Creates new form TranscriptJPanel
     */
    public TranscriptJPanel(UserAccount account, ArrayList<Enrollment> enrollments) {
        initComponents();
        this.allEnrollments = new ArrayList<>();
        this.userAccount = account;
        this.student = (Student) account.getProfile();
        this.allEnrollments = enrollments;

        populateSemesterComboBox();
        populateTranscriptTable(null);
        calculateOverallGPA();
    }

    TranscriptJPanel() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblSemester = new javax.swing.JLabel();
        comboBoxSemester = new javax.swing.JComboBox<>();
        btnFilter = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTranscript = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        lblTeamGPA = new javax.swing.JLabel();
        txtTermGPA = new javax.swing.JTextField();
        lblOverallGPA = new javax.swing.JLabel();
        txtOverallGPA = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 255, 204));
        setMaximumSize(new java.awt.Dimension(600, 465));
        setMinimumSize(new java.awt.Dimension(600, 465));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Transcript Review");

        lblSemester.setText("Semester");

        comboBoxSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSemesterActionPerformed(evt);
            }
        });

        btnFilter.setText("Filter");
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        jLabel3.setText("Transcript Display Table ");

        tblTranscript.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Term", "Course ID", "Course Name", "Grade", "Term GPA", "Overall GPA", "Academic Standing"
            }
        ));
        jScrollPane1.setViewportView(tblTranscript);

        jLabel4.setText("GPA Summary Section");

        lblTeamGPA.setText("Term GPA");

        txtTermGPA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTermGPAActionPerformed(evt);
            }
        });

        lblOverallGPA.setText("Overall GPA");

        txtOverallGPA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOverallGPAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(btnFilter))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(lblSemester)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblTeamGPA)
                                    .addComponent(lblOverallGPA))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtOverallGPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTermGPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSemester)
                    .addComponent(comboBoxSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTeamGPA)
                    .addComponent(txtTermGPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOverallGPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOverallGPA))
                .addContainerGap(128, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTermGPAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTermGPAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTermGPAActionPerformed

    private void txtOverallGPAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOverallGPAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOverallGPAActionPerformed

    private void comboBoxSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSemesterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxSemesterActionPerformed

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        // TODO add your handling code here:
        String selectedSemester = (String) comboBoxSemester.getSelectedItem();
        populateTranscriptTable(selectedSemester);
        calculateTermGPA(selectedSemester);
    }//GEN-LAST:event_btnFilterActionPerformed
    private void populateSemesterComboBox() {
        Set<String> semesters = new HashSet<>();
        for (Enrollment e : allEnrollments) {
            if (e.isCompleted()) {
                semesters.add(e.getCourseOffering().getSemester());
            }
        }
        comboBoxSemester.removeAllItems();
        for (String sem : semesters) {
            comboBoxSemester.addItem(sem);
        }
    }

    private void populateTranscriptTable(String semesterFilter) {
        DefaultTableModel model = (DefaultTableModel) tblTranscript.getModel();
        model.setRowCount(0);

        for (Enrollment e : allEnrollments) {
            if (e.isCompleted() && (semesterFilter == null || e.getCourseOffering().getSemester().equalsIgnoreCase(semesterFilter))) {
                CourseOffering co = e.getCourseOffering();
                Object[] row = new Object[7];
                row[0] = co.getSemester();
                row[1] = co.getCourse().getCourseID();
                row[2] = co.getCourse().getName();
                row[3] = co.getCourse().getCredits();
                row[4] = e.getGrade();
                row[5] = calculateGPAForGrade(e.getGrade());
                row[6] = getStanding(e.getGrade());
                model.addRow(row);
            }
        }
    }

    private double calculateGPAForGrade(String grade) {
        switch (grade.toUpperCase()) {
            case "A+": return 4.0;
            case "A":  return 4.0;
            case "A-": return 3.7;
            case "B+": return 3.3;
            case "B":  return 3.0;
            case "B-": return 2.7;
            case "C+": return 2.3;
            case "C":  return 2.0;
            case "D":  return 1.0;
            case "F":  return 0.0;
            default:   return 0.0;
        }
    }

    private String getStanding(String grade) {
        double gpa = calculateGPAForGrade(grade);
        if (gpa >= 3.5) return "Excellent";
        else if (gpa >= 3.0) return "Good";
        else if (gpa >= 2.0) return "Average";
        else return "At Risk";
    }

    private void calculateTermGPA(String semester) {
        double totalPoints = 0;
        int totalCredits = 0;

        for (Enrollment e : allEnrollments) {
            if (e.isCompleted() && e.getCourseOffering().getSemester().equalsIgnoreCase(semester)) {
                double gradePoint = calculateGPAForGrade(e.getGrade());
                int credits = e.getCourseOffering().getCourse().getCredits();
                totalPoints += (gradePoint * credits);
                totalCredits += credits;
            }
        }

        double termGPA = totalCredits == 0 ? 0 : totalPoints / totalCredits;
        txtTermGPA.setText(String.format("%.2f", termGPA));
    }

    private void calculateOverallGPA() {
        double totalPoints = 0;
        int totalCredits = 0;

        for (Enrollment e : allEnrollments) {
            if (e.isCompleted()) {
                double gradePoint = calculateGPAForGrade(e.getGrade());
                int credits = e.getCourseOffering().getCourse().getCredits();
                totalPoints += (gradePoint * credits);
                totalCredits += credits;
            }
        }

        double overallGPA = totalCredits == 0 ? 0 : totalPoints / totalCredits;
        txtOverallGPA.setText(String.format("%.2f", overallGPA));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFilter;
    private javax.swing.JComboBox<String> comboBoxSemester;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblOverallGPA;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JLabel lblTeamGPA;
    private javax.swing.JTable tblTranscript;
    private javax.swing.JTextField txtOverallGPA;
    private javax.swing.JTextField txtTermGPA;
    // End of variables declaration//GEN-END:variables
}
