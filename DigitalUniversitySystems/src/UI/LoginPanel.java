/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Department;
import Model.ProfileEnum;
import Model.User.UserAccount;
import Model.User.UserAccountDirectory;
import UI.AdminRole.AdminDashboardJPanel;
import UI.FacultyRole.FacultyDashboardJPanel;
import UI.RegistrarRole.RegistrarDashboardJPanel;
import UI.StudentRole.StudentDashboardJPanel; // Added Student Dashboard
import Model.accesscontrol.ConfigureJTable; // Import ConfigureJTable for initialization
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import Model.Student;
/**
 *
 * @author gagan
 */
public class LoginPanel extends javax.swing.JPanel {

    private JPanel workArea;
    private JPanel adminDashboardPanel;
    private JPanel facultyDashboardPanel;
    private JPanel studentDashboardPanel;
    private JPanel registrarDashboardPanel;
    private UserAccountDirectory accountDirectory;

    
    // Constructor must be public LoginPanel(JPanel workArea) { ... }
    public LoginPanel(JPanel workArea) {
        // 1. Initialize Directory and Data BEFORE initComponents() is called.
        this.accountDirectory = new UserAccountDirectory();
        
        // --- CRITICAL FIX: Initialize Data Source ---
        ConfigureJTable.initializeData(this.accountDirectory); 
        // Note: The hardcoded newUserAccount calls below must be removed from your actual file,
        // as the data is now created and loaded in ConfigureJTable.initializeData().
        
        initComponents();
        this.workArea = workArea;
    }
    
    // NOTE: The hardcoded newUserAccount calls are now commented out/removed from the constructor body
    // to prevent duplicate data creation, as ConfigureJTable handles it.


    private UserAccount authenticate(String username, String password) {
        // Authenticate using the data loaded by ConfigureJTable
        for(UserAccount ua: this.accountDirectory.getUserAccountList()) {
            if (ua.getUsername().equals(username) && ua.getPassword().equals(password)) {
                return ua;
            }
        }
        return null;
    }
    /**
     * Called by Login action. Switches the main view to the appropriate dashboard.
     */
    public void showDashboard(UserAccount userAccount) {
        
        CardLayout cardLayout = (CardLayout) workArea.getLayout();
        String roleString = userAccount.getProfile().getRole();
        ProfileEnum profile = ProfileEnum.fromProfile(roleString);
        
        JPanel container = this.workArea;

        switch (profile) {
            case ADMIN:
                if (adminDashboardPanel == null) {
                    adminDashboardPanel = new AdminDashboardJPanel(container, accountDirectory, userAccount);
                    workArea.add(adminDashboardPanel, "AdminDashBoardPanel");
                }
                cardLayout.show(container, "AdminDashBoardPanel"); 
                break;
                
            case REGISTRAR:
                if (registrarDashboardPanel == null) {
                    registrarDashboardPanel = new RegistrarDashboardJPanel(container, accountDirectory, userAccount);
                    workArea.add(registrarDashboardPanel, "RegistrarDashboardPanel");
                }
                cardLayout.show(container, "RegistrarDashboardPanel"); 
                break;
                
            case FACULTY:
                if (facultyDashboardPanel == null) {
                    facultyDashboardPanel = new FacultyDashboardJPanel(container, accountDirectory, userAccount);
                    workArea.add(facultyDashboardPanel, "FacultyDashboardPanel");
                }
                cardLayout.show(container, "FacultyDashboardPanel");
                break;
                
            case STUDENT:
                if (studentDashboardPanel == null) {
                    // Instantiation for Student Dashboard (requires Student object)
                    studentDashboardPanel = new StudentDashboardJPanel(container, accountDirectory, userAccount);
                    workArea.add(studentDashboardPanel, "StudentDashboardPanel");
                }
                cardLayout.show(container, "StudentDashboardPanel");
                break;
                
            default:
                JOptionPane.showMessageDialog(this, "Dashboard not implemented for role: " + roleString, "Error", JOptionPane.ERROR_MESSAGE);
                break;
        }
    }           
           

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jPasswordField = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        lblUsername.setText("Username:");

        lblPassword.setText("Password:");

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        jPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordFieldActionPerformed(evt);
            }
        });

        btnLogin.setBackground(new java.awt.Color(255, 204, 204));
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUsername)
                            .addComponent(lblPassword))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsername)
                            .addComponent(jPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(btnLogin)))
                .addContainerGap(321, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword))
                .addGap(36, 36, 36)
                .addComponent(btnLogin)
                .addContainerGap(252, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String username = txtUsername.getText();
        String password = new String(jPasswordField.getPassword());

        if (username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Username and Password cannot be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        UserAccount authenticatedUser = authenticate(username, password);

        if (authenticatedUser != null) {
            JOptionPane.showMessageDialog(this, "Login Successful! Role: " + authenticatedUser.getProfile().getRole(), "Success", JOptionPane.INFORMATION_MESSAGE);
            showDashboard(authenticatedUser);
            txtUsername.setText("");
            jPasswordField.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Invalid Username or Password.", "Authentication Failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnLoginActionPerformed



    /**
     * Called by Login action. Switches the main view to the appropriate dashboard.
     */

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void jPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
